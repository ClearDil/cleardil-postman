{
	"info": {
		"_postman_id": "98c898d2-78ad-4b1a-a51f-034a64e02b8d",
		"name": "API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "456866"
	},
	"item": [
		{
			"name": "token",
			"item": [
				{
					"name": "Get API oauth2 token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {\r",
									"    var jd = JSON.parse(responseBody);\r",
									"    postman.setEnvironmentVariable(\"accessTokenUser\", jd.access_token);\r",
									"}\r",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "username",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{cleardil_url}}/oauth2/token",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "customers",
			"item": [
				{
					"name": "Create individual cust all fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"\r",
									"if (responseCode.code === 201){\r",
									"    var jd = JSON.parse(responseBody);\r",
									"    postman.setEnvironmentVariable(\"customer_a_id\", jd.id);\r",
									"}\r",
									"    \r",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\" : \"INDIVIDUAL\",\r\n    \"email\" : \"jon@doe.com\",\r\n    \"telephone\" : \"+91-9337888808\",\r\n    \"mobile\" : \"+91-9337888808\",\r\n    \"addresses\" : [\r\n    \t{\r\n            \"property_number\": \"10\",\r\n            \"property_name\": \"Custom House\",\r\n            \"line\": \"Main Street\",\r\n            \"city\": \"Aldgate\",\r\n            \"state_or_province\": \"London\",\r\n            \"postal_code\": \"E99 0ZZ\",\r\n            \"country\": \"GBR\",\r\n            \"from_date\": \"2010-01-01\"\r\n        }\r\n    ],\r\n    \"title\" : \"MRS\",\r\n    \"first_name\" : \"Jon\",\r\n    \"middle_name\" : \"Martin\",\r\n    \"last_name\" : \"Doe\",\r\n    \"maiden_name\" : \"Kiriku\",\r\n    \"alternative_first_name\" : \"Jonathan\",\r\n    \"alternative_middle_name\" : \"Martinero\",\r\n    \"alternative_last_name\" : \"Patel\",\r\n    \"dob\" : \"1971-04-06\",\r\n    \"gender\": \"MALE\",\r\n    \"nationality\" : \"IND\",\r\n    \"birth_country\" : \"IND\"\r\n}"
						},
						"url": {
							"raw": "{{cleardil_url}}/customers",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch individual customer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch all individual customers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch individual customer",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUserB}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\"op\": \"replace\", \"path\": \"/first_name\", \"value\": \"John\"},\r\n  {\"op\": \"replace\", \"path\": \"/last_name\", \"value\": \"Boe\"},\r\n  {\"op\": \"replace\", \"path\": \"/addresses/0/property_number\", \"value\": \"13AA\"},\r\n  {\"op\": \"replace\", \"path\": \"/addresses/0/from_date\", \"value\": \"2016-02-08\"},\r\n  {\"op\": \"add\", \"path\": \"/addresses/0/to_date\", \"value\": \"2016-02-08T03:29:33Z\"},\r\n  {\"op\": \"replace\", \"path\": \"/addresses/1/line\", \"value\": \"Ujalpur\"}\r\n]\r\n"
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update individual customer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\" : \"INDIVIDUAL\",\r\n    \"email\" : \"jon@doe.com\",\r\n    \"telephone\" : \"+91-9337888811\",\r\n    \"mobile\" : \"+91-9337888811\",\r\n    \"addresses\" : [\r\n    \t{\r\n            \"property_number\": \"11\",\r\n            \"property_name\": \"Custom House update\",\r\n            \"line\": \"Main Street update\",\r\n            \"city\": \"Aldgate update\",\r\n            \"state_or_province\": \"London update\",\r\n            \"postal_code\": \"E99 011\",\r\n            \"country\": \"GBR\",\r\n            \"from_date\": \"2010-01-01\"\r\n        }\r\n    ],\r\n    \"title\" : \"MRS\",\r\n    \"first_name\" : \"Jony\",\r\n    \"middle_name\" : \"Martini\",\r\n    \"last_name\" : \"Doe\",\r\n    \"maiden_name\" : \"Kiriku\",\r\n    \"alternative_first_name\" : \"Jonathan\",\r\n    \"alternative_middle_name\" : \"Martinero\",\r\n    \"alternative_last_name\" : \"Patello\",\r\n    \"dob\" : \"1971-04-06\",\r\n    \"gender\": \"MALE\",\r\n    \"nationality\" : \"IND\",\r\n    \"birth_country\" : \"IND\"\r\n}"
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete individual customer",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}"
							]
						},
						"description": "You can delete a customer only if you've not done any check on him."
					},
					"response": []
				}
			]
		},
		{
			"name": "screening",
			"item": [
				{
					"name": "Valid customer screening with full scope",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"\r",
									"if (responseCode.code === 201) {\r",
									"    var jd = JSON.parse(responseBody);\r",
									"    postman.setEnvironmentVariable(\"screening_a_id\", jd.id);\r",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t\"pep\",\n\t\"watchlist\", \n\t\"disqualified_entities\",\n\t\"adverse_media\"\n]"
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/screenings",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"screenings"
							]
						},
						"description": "submit a screening request"
					},
					"response": []
				},
				{
					"name": "View overall screening result",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/screenings/{{screening_a_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"screenings",
								"{{screening_a_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "View all screenings result",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/screenings",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"screenings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create required ODD",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseCode.code === 201){",
									"    var jd = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"odd_a_id\", jd.id);",
									"}",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"frequency\" : \"WEEKLY\",\n    \"scope\": [\"PEP\", \"WATCHLIST\"]\n}"
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/odd",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"odd"
							]
						},
						"description": "Create Ongoing Due Diligence configurdation"
					},
					"response": []
				},
				{
					"name": "Fetch ODD configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseCode.code === 200){",
									"    var jd = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"odd_a_id\", jd.id);",
									"}",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/odd/{{odd_a_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"odd",
								"{{odd_a_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All ODD configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/odd",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"odd"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH update ODD configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\"op\": \"replace\", \"path\": \"/frequency\", \"value\": \"DAILY\"},\n  {\"op\": \"add\", \"path\": \"/scope/-\", \"value\" : \"DISQUALIFIED_ENTITIES\"},  \n  {\"op\": \"remove\", \"path\": \"/active\"}\n]\n"
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/odd/{{odd_a_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"odd",
								"{{odd_a_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Update ODD configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseCode.code === 200){",
									"    var jd = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"odd_a_id\", jd.id);",
									"}",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"frequency\" : \"MONTHLY\",\n    \"scope\": [\"PEP\", \"WATCHLIST\", \"ADVERSE_MEDIA\"],\n    \"active\" : true\n}\n"
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/odd/{{odd_a_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"odd",
								"{{odd_a_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete ODD configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/odd/{{odd_a_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"odd",
								"{{odd_a_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "matches",
			"item": [
				{
					"name": "Fetch all matches",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"\r",
									"if (responseCode.code === 200) {\r",
									"    \r",
									"    var jd = JSON.parse(responseBody);\r",
									"    var matches2dismiss = \"\"\r",
									"    var matches2confirm = \"\"\r",
									"    var match_1_id = \"\"\r",
									"    var match_2_id = \"\"\r",
									"\r",
									"    // we are saving match ids to use them later in the confirm and dismiss examples\r",
									"    for (i=0; i<jd.content.length; i++)\r",
									"    {\r",
									"        if (i===0)\r",
									"        {\r",
									"            matches2confirm = \"\\\"\"+ jd.content[i].id + \"\\\"\"\r",
									"            match_1_id = jd.content[i].id\r",
									"        }\r",
									"        else\r",
									"            if (matches2dismiss !== \"\")\r",
									"            {\r",
									"                matches2dismiss = matches2dismiss +\",\\\"\"+ jd.content[i].id + \"\\\"\"\r",
									"                match_2_id = jd.content[i].id\r",
									"\r",
									"            }\r",
									"            else\r",
									"                matches2dismiss = \"\\\"\"+ jd.content[i].id + \"\\\"\"\r",
									"    }\r",
									"    postman.setEnvironmentVariable(\"matches2dismiss\", matches2dismiss);\r",
									"    postman.setEnvironmentVariable(\"matches2confirm\", matches2confirm);\r",
									"    postman.setEnvironmentVariable(\"match_1_id\", match_1_id);\r",
									"    postman.setEnvironmentVariable(\"match_2_id\", match_2_id);\r",
									"}\r",
									"\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/screenings/{{screening_a_id}}/matches",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"screenings",
								"{{screening_a_id}}",
								"matches"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch a match",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/screenings/{{screening_a_id}}/matches/{{match_1_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"screenings",
								"{{screening_a_id}}",
								"matches",
								"{{match_1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Confirm a match",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_b_id}}/screenings/{{screening_b_id}}/matches/{{match_1_id}}/confirm",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_b_id}}",
								"screenings",
								"{{screening_b_id}}",
								"matches",
								"{{match_1_id}}",
								"confirm"
							]
						},
						"description": "We see a duplicate for president Obama's father\n 1/ is it a duplicate in DJ or on our side ?\n 2/ [TODO] matches should be ordered by scorecard.score\n 3/ check the DJ data missing values in the match for Obama president, e.i. place of birth is missing"
					},
					"response": []
				},
				{
					"name": "Dismiss a match",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_b_id}}/screenings/{{screening_b_id}}/matches/{{match_2_id}}/dismiss",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_b_id}}",
								"screenings",
								"{{screening_b_id}}",
								"matches",
								"{{match_2_id}}",
								"dismiss"
							]
						},
						"description": "We see a duplicate for president Obama's father\n 1/ is it a duplicate in DJ or on our side ?\n 2/ [TODO] matches should be ordered by scorecard.score\n 3/ check the DJ data missing values in the match for Obama president, e.i. place of birth is missing"
					},
					"response": []
				},
				{
					"name": "Dismiss multiple matches",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"[",
									"    {{matches2dismiss}}",
									"]"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{{matches2dismiss}}\n]"
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_b_id}}/screenings/{{screening_b_id}}/matches/dismiss",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_b_id}}",
								"screenings",
								"{{screening_b_id}}",
								"matches",
								"dismiss"
							]
						},
						"description": "We see a duplicate for president Obama's father\n 1/ is it a duplicate in DJ or on our side ?\n 2/ [TODO] matches should be ordered by scorecard.score\n 3/ check the DJ data missing values in the match for Obama president, e.i. place of birth is missing"
					},
					"response": []
				},
				{
					"name": "Confirm multiple matches",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"[",
									"    {{matches2confirm}}",
									"]"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{{matches2confirm}}\n]"
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_b_id}}/screenings/{{screening_b_id}}/matches/dismiss",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_b_id}}",
								"screenings",
								"{{screening_b_id}}",
								"matches",
								"dismiss"
							]
						},
						"description": "We see a duplicate for president Obama's father\n 1/ is it a duplicate in DJ or on our side ?\n 2/ [TODO] matches should be ordered by scorecard.score\n 3/ check the DJ data missing values in the match for Obama president, e.i. place of birth is missing"
					},
					"response": []
				}
			]
		},
		{
			"name": "associations",
			"item": [
				{
					"name": "Fetch one association belonging to a match",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/screenings/{{screening_a_id}}/matches/{{match_id}}/associations/{{asso_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"screenings",
								"{{screening_a_id}}",
								"matches",
								"{{match_id}}",
								"associations",
								"{{asso_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch all associations belonging to a match",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/screenings/{{screening_a_id}}/matches/{{match_id}}/associations",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"screenings",
								"{{screening_a_id}}",
								"matches",
								"{{match_id}}",
								"associations"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "risk_profile",
			"item": [
				{
					"name": "Fetch risk profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/risk_profile",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"risk_profile"
							]
						},
						"description": "Create individual customer"
					},
					"response": []
				}
			]
		},
		{
			"name": "documents",
			"item": [
				{
					"name": "Create a DRIVING_LICENSE document",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"\r",
									"\r",
									"if (responseCode.code === 201) {\r",
									"    var jd = JSON.parse(responseBody);\r",
									"    postman.setEnvironmentVariable(\"document_a_id\", jd.id);\r",
									"}\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							},
							{
								"key": "Content-Type",
								"value": "multipart-formdata"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "front_side",
									"value": "",
									"type": "file"
								},
								{
									"key": "type",
									"value": "DRIVING_LICENSE",
									"type": "text"
								},
								{
									"key": "document_name",
									"value": "driving licence ",
									"type": "text"
								},
								{
									"key": "document_description",
									"value": "driving licence",
									"type": "text"
								},
								{
									"key": "document_number",
									"value": "N1234567890",
									"type": "text"
								},
								{
									"key": "issuing_country",
									"value": "USA",
									"type": "text"
								},
								{
									"key": "issue_date",
									"value": "2010-01-01",
									"type": "text"
								},
								{
									"key": "expiry_date",
									"value": "2020-01-01",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/documents",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"documents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a NATIONAL_ID_CARD document",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"\r",
									"\r",
									"if (responseCode.code === 201) {\r",
									"    var jd = JSON.parse(responseBody);\r",
									"    postman.setEnvironmentVariable(\"document_b_id\", jd.id);\r",
									"}\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "type",
									"value": "NATIONAL_ID_CARD",
									"type": "text"
								},
								{
									"key": "document_name",
									"value": "NIC",
									"type": "text"
								},
								{
									"key": "document_description",
									"value": "National Id Card",
									"type": "text"
								},
								{
									"key": "document_number",
									"value": "N1234567890",
									"type": "text"
								},
								{
									"key": "issuing_country",
									"value": "USA",
									"type": "text"
								},
								{
									"key": "issue_date",
									"value": "2010-01-01",
									"type": "text"
								},
								{
									"key": "expiry_date",
									"value": "2020-01-01",
									"type": "text"
								},
								{
									"key": "front_side",
									"value": "",
									"type": "file"
								},
								{
									"key": "back_side",
									"value": "",
									"type": "file"
								}
							]
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/documents",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"documents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch DRIVING_LICENSE document",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/documents/{{document_a_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"documents",
								"{{document_a_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download the attached DRIVING_LICENSE from the document",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/documents/{{document_a_id}}/download",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"documents",
								"{{document_a_id}}",
								"download"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "verifications",
			"item": [
				{
					"name": "Perform MRZ analysis",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    var jd = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"verification_a_id\", jd.id);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"document_id\" : \"{{document_b_id}}\",\n    \"type\" : \"mrz\"\n}"
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/verifications",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"verifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Perform image analysis",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    var jd = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"verification_b_id\", jd.id);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"document_id\" : \"{{document_b_id}}\",\n    \"type\" : \"image\"\n}"
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/verifications",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"verifications"
							]
						},
						"description": "Testing the data retreived from the document attach to a customer."
					},
					"response": []
				},
				{
					"name": "Fetch all verifications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/verifications",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"verifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch a verification",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/verifications/{{verification_a_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"verifications",
								"{{verification_a_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a verification",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/verifications/{{verification_a_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"verifications",
								"{{verification_a_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "notes",
			"item": [
				{
					"name": "Create a note",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"\r",
									"if (responseCode.code === 201) {\r",
									"    var jd = JSON.parse(responseBody);\r",
									"    postman.setEnvironmentVariable(\"note_a_id\", jd.id);\r",
									"}\r",
									"\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"text\" : \"this is a note about Brian!\"\t\n}"
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/notes",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch a note",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/notes/{{note_a_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"notes",
								"{{note_a_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch all notes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}/notes",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a note",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{cleardil_url}}/customers/{{customer_a_id}}",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"customers",
								"{{customer_a_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "search",
			"item": [
				{
					"name": "Search screenings done",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers)\r",
									"helpers.verifyValue(\"status code\", 200, responseCode.code)\r",
									"\r",
									"if (responseCode.code === 200) {\r",
									"    var jd = JSON.parse(responseBody)\r",
									"    //helpers.verifyValue(\"number of matches\", 17, jd.number_of_elements)\r",
									"\r",
									"    for (i=0; i<jd.content.length; i++)\r",
									"    {\r",
									"        var screening = jd.content[i]\r",
									"        if (screening.status != \"DONE\")\r",
									"            helpers.verifyValue(\"status \"+i, \"DONE\", screening.status)\r",
									"    }\r",
									"}\r",
									"\r",
									"\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/search/screenings?status=DONE",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"search",
								"screenings"
							],
							"query": [
								{
									"key": "status",
									"value": "DONE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search pending screenings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/search/screenings?status=PENDING",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"search",
								"screenings"
							],
							"query": [
								{
									"key": "status",
									"value": "PENDING"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search verifications DONE",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/search/verifications?status=DONE",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"search",
								"verifications"
							],
							"query": [
								{
									"key": "status",
									"value": "DONE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search all your CONFIRMED matches",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessTokenUser}}"
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/search/matches?validation_result=CONFIRMED",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"search",
								"matches"
							],
							"query": [
								{
									"key": "validation_result",
									"value": "CONFIRMED"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
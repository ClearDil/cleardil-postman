{
	"info": {
		"_postman_id": "356ac8fa-bbd5-47bb-8558-0bf17a253aa8",
		"name": "Simple Demo Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "misc",
			"item": [
				{
					"name": "Get API oauth2 token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    var jd = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"accessTokenUser\", jd.access_token);",
									"    postman.setEnvironmentVariable(\"gui\", \"{{$timestamp}}{{$randomInt}}\");",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "username",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"value": ""
							}
						],
						"url": {
							"raw": "{{cleardil_url}}/oauth2/token",
							"host": [
								"{{cleardil_url}}"
							],
							"path": [
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				}
			],
			"description": "In this folder you will find the rest enpoints which allow you to:\n - obtain your API token\n - list all the customer you created\n - delete them one by one to prevent you from having duplicate entries"
		},
		{
			"name": "Create Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"if (responseCode.code === 201) {",
							"    var jd = JSON.parse(responseBody);",
							"    postman.setEnvironmentVariable(\"customer_1_id\", jd.id);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessTokenUser}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"type\" : \"INDIVIDUAL\",\n    \"email\" : \"Yasumi{{gui}}@mail.com\",\n    \"first_name\" : \"Yasumi\",\n    \"last_name\" : \"Okazawa\"\n}"
				},
				"url": {
					"raw": "{{cleardil_url}}/customers",
					"host": [
						"{{cleardil_url}}"
					],
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload Document",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 201) {",
							"    var jd = JSON.parse(responseBody);",
							"    postman.setEnvironmentVariable(\"residence_permit_doc_id\", jd.id);",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessTokenUser}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "front_side",
							"type": "file",
							"src": "PERMIT_UK_FRONT.jpg"
						},
						{
							"key": "back_side",
							"type": "file",
							"src": "PERMIT_UK_BACK.jpg"
						},
						{
							"key": "type",
							"value": "RESIDENCE_PERMIT",
							"type": "text"
						},
						{
							"key": "document_name",
							"value": "residence permit",
							"type": "text"
						},
						{
							"key": "document_description",
							"value": "residence permit",
							"type": "text"
						},
						{
							"key": "document_number",
							"value": "ZU1234567",
							"type": "text"
						},
						{
							"key": "mrz_line1",
							"value": "IRGBRZU12345673<<<<<<<<<<<<<<<",
							"type": "text"
						},
						{
							"key": "mrz_line2",
							"value": "6608198F0808088COU<<<<<<<<<<<6",
							"type": "text"
						},
						{
							"key": "mrz_line3",
							"value": "SAMPLE<<SUSANNA<<<<<<<<<<<<<<<",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{cleardil_url}}/customers/{{customer_1_id}}/documents",
					"host": [
						"{{cleardil_url}}"
					],
					"path": [
						"customers",
						"{{customer_1_id}}",
						"documents"
					]
				},
				"description": "Upload attachment"
			},
			"response": []
		},
		{
			"name": "Screen Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"\r",
							"if (responseCode.code === 201) {\r",
							"    var jd = JSON.parse(responseBody);\r",
							"    postman.setEnvironmentVariable(\"screening_1_id\", jd.id);\r",
							"}\r",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessTokenUser}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n\t\"pep\",\n\t\"watchlist\",\n\t\"disqualified_entities\",\n\t\"adverse_media\"\n]"
				},
				"url": {
					"raw": "{{cleardil_url}}/customers/{{customer_1_id}}/screenings",
					"host": [
						"{{cleardil_url}}"
					],
					"path": [
						"customers",
						"{{customer_1_id}}",
						"screenings"
					]
				}
			},
			"response": []
		},
		{
			"name": "View Matches",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 200) {",
							"    var jd = JSON.parse(responseBody);",
							"    var matches2dismiss = \"\"",
							"",
							"    if (jd.content.length>1)",
							"    {",
							"        var i = 0",
							"        var match = jd.content[i]",
							"        tests[match.validation_result + \" confirmed match score -> \"+match.scorecard.overall_score + \" - \"+match.scorecard.breakdown[0].field_value] = true === true",
							"        ",
							"        postman.setEnvironmentVariable(\"match2confirm\", jd.content[i].id);",
							"    }",
							"",
							"    for (i=1; i<jd.content.length; i++)",
							"    {",
							"        var match = jd.content[i]",
							"        tests[match.validation_result + \" match \"+i+\" score -> \"+match.scorecard.overall_score + \" - \"+match.scorecard.breakdown[0].field_value] = true === true",
							"        ",
							"        if (matches2dismiss !== \"\")",
							"            matches2dismiss = matches2dismiss +\",\\\"\"+ jd.content[i].id + \"\\\"\"",
							"        else",
							"            matches2dismiss = \"\\\"\"+ jd.content[i].id + \"\\\"\"",
							"    }",
							"    postman.setEnvironmentVariable(\"matches2dismiss\", matches2dismiss);",
							"}",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessTokenUser}}"
					}
				],
				"url": {
					"raw": "{{cleardil_url}}/customers/{{customer_1_id}}/screenings/{{screening_1_id}}/matches",
					"host": [
						"{{cleardil_url}}"
					],
					"path": [
						"customers",
						"{{customer_1_id}}",
						"screenings",
						"{{screening_1_id}}",
						"matches"
					]
				}
			},
			"response": []
		},
		{
			"name": "Validate Match",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessTokenUser}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{cleardil_url}}/customers/{{customer_1_id}}/screenings/{{screening_1_id}}/matches/{{match2confirm}}/confirm",
					"host": [
						"{{cleardil_url}}"
					],
					"path": [
						"customers",
						"{{customer_1_id}}",
						"screenings",
						"{{screening_1_id}}",
						"matches",
						"{{match2confirm}}",
						"confirm"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalidate Other Matches",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessTokenUser}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n\t{{matches2dismiss}}\n]"
				},
				"url": {
					"raw": "{{cleardil_url}}/customers/{{customer_1_id}}/screenings/{{screening_1_id}}/matches/dismiss",
					"host": [
						"{{cleardil_url}}"
					],
					"path": [
						"customers",
						"{{customer_1_id}}",
						"screenings",
						"{{screening_1_id}}",
						"matches",
						"dismiss"
					]
				},
				"description": "We confirmed a match in the previous API call, we need to dismiss the other matches."
			},
			"response": []
		},
		{
			"name": "View all screenings result",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessTokenUser}}"
					}
				],
				"url": {
					"raw": "{{cleardil_url}}/customers/{{customer_1_id}}/screenings",
					"host": [
						"{{cleardil_url}}"
					],
					"path": [
						"customers",
						"{{customer_1_id}}",
						"screenings"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Document",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 200) {",
							"    var jd = JSON.parse(responseBody);",
							"    postman.setEnvironmentVariable(\"analysis_c_id\", jd.id);",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessTokenUser}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"document_id\" : \"{{residence_permit_doc_id}}\",\n    \"type\" : \"image\"\n}"
				},
				"url": {
					"raw": "{{cleardil_url}}/customers/{{customer_1_id}}/verifications",
					"host": [
						"{{cleardil_url}}"
					],
					"path": [
						"customers",
						"{{customer_1_id}}",
						"verifications"
					]
				}
			},
			"response": []
		},
		{
			"name": "Ongoing Due Diligence",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessTokenUser}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"frequency\" : \"WEEKLY\",\n    \"scope\": [\"PEP\", \"WATCHLIST\"],\n    \"enabled\" : true\n}"
				},
				"url": {
					"raw": "{{cleardil_url}}/customers/{{customer_1_id}}/odd",
					"host": [
						"{{cleardil_url}}"
					],
					"path": [
						"customers",
						"{{customer_1_id}}",
						"odd"
					]
				},
				"description": "Create Ongoing Due Diligence configuration"
			},
			"response": []
		}
	]
}